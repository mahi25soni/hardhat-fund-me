{
  "address": "0x64D65bBCb73017C49D6143534952F1A6d69EFC03",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe4f48d18567fd7a9c8a54edcb4f344e46f31188e4b356dd0be9c41748a71e960",
  "receipt": {
    "to": null,
    "from": "0xaEc33339d2f45b08ac43ff84D69E14E6a8F3ee63",
    "contractAddress": "0x64D65bBCb73017C49D6143534952F1A6d69EFC03",
    "transactionIndex": 39,
    "gasUsed": "956737",
    "logsBloom": "0x
    "blockHash": "0x81604c00f3cc93a8847272811b468c3edc4ed6476e5153764cfef7e04633c0e6",
    "transactionHash": "0xe4f48d18567fd7a9c8a54edcb4f344e46f31188e4b356dd0be9c41748a71e960",
    "logs": [],
    "blockNumber": 8299646,
    "cumulativeGasUsed": "7008796",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "93c4f75357c1f8912eaf82b96179c4cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    address[] public funders;\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address public /* immutable */ i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n    AggregatorV3Interface public priceFeed = AggregatorV3Interface(\\r\\n        0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n    );\\r\\n    constructor(address priceFeedAddress) {\\r\\n        priceFeed =  AggregatorV3Interface(priceFeedAddress);\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n        funders.push(msg.sender);\\r\\n    }\\r\\n    \\r\\n    function getVersion() public view returns (uint256){\\r\\n        // ETH/USD price feed address of Goerli Network.\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n     \\r\\n    modifier onlyOwner {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_owner) revert NotOwner();\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n    // Explainer from: https://solidity-by-example.org/fallback/\\r\\n    // Ether is sent to contract\\r\\n    //      is msg.data empty?\\r\\n    //          /   \\\\ \\r\\n    //         yes  no\\r\\n    //         /     \\\\\\r\\n    //    receive()?  fallback() \\r\\n    //     /   \\\\ \\r\\n    //   yes   no\\r\\n    //  /        \\\\\\r\\n    //receive()  fallback()\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n// Concepts we didn't cover yet (will cover in later sections)\\r\\n// 1. Enum\\r\\n// 2. Events\\r\\n// 3. Try / Catch\\r\\n// 4. Function Selector\\r\\n// 5. abi.encode / decode\\r\\n// 6. Hash with keccak256\\r\\n// 7. Yul / Assembly\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x4bc5e34f57686eb8117a6d06f58cef79c59011f1ca3178446c741fb660b78f58\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it \\r\\n    function getConversionRate(uint ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint)\\r\\n    {\\r\\n        (, int answer, , , ) = priceFeed.latestRoundData();\\r\\n        uint ethPrice = uint(answer * 10000000000);\\r\\n        uint ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x8f02f8b15a115df6bbbba074133004e0563b8cf78191bb1eedd9e27d0d84c868\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405273d4a33860578de61dbabdc8bfdb98fd742fa7028e600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b506040516200113d3803806200113d83398181016040528101906200008c91906200017f565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001b1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000147826200011a565b9050919050565b62000159816200013a565b81146200016557600080fd5b50565b60008151905062000179816200014e565b92915050565b60006020828403121562000198576200019762000115565b5b6000620001a88482850162000168565b91505092915050565b610f7c80620001c16000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061083d565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108bb565b610602565b60405161010e919061083d565b60405180910390f35b34801561012357600080fd5b5061012c61061a565b604051610139919061083d565b60405180910390f35b34801561014e57600080fd5b50610157610627565b6040516101649190610947565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064d565b6040516101999190610971565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109b8565b610673565b6040516101d69190610971565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b290919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a42565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a91565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190610afc565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610447576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104f25760006001828154811061046d5761046c610b29565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ea90610b58565b91505061044a565b50600067ffffffffffffffff81111561050e5761050d610ba1565b5b60405190808252806020026020018201604052801561053c5781602001602082028036833780820191505090505b506001908051906020019061055292919061077d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057990610c01565b60006040518083038185875af1925050503d80600081146105b6576040519150601f19603f3d011682016040523d82523d6000602084013e6105bb565b606091505b50509050806105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f690610c62565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061068357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190610cfa565b50505091505060006402540be4008261074c9190610d75565b90506000670de0b6b3a764000086836107659190610e8c565b61076f9190610f15565b905080935050505092915050565b8280548282559060005260206000209081019282156107f6579160200282015b828111156107f55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079d565b5b5090506108039190610807565b5090565b5b80821115610820576000816000905550600101610808565b5090565b6000819050919050565b61083781610824565b82525050565b6000602082019050610852600083018461082e565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108888261085d565b9050919050565b6108988161087d565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b6000602082840312156108d1576108d0610858565b5b60006108df848285016108a6565b91505092915050565b6000819050919050565b600061090d6109086109038461085d565b6108e8565b61085d565b9050919050565b600061091f826108f2565b9050919050565b600061093182610914565b9050919050565b61094181610926565b82525050565b600060208201905061095c6000830184610938565b92915050565b61096b8161087d565b82525050565b60006020820190506109866000830184610962565b92915050565b61099581610824565b81146109a057600080fd5b50565b6000813590506109b28161098c565b92915050565b6000602082840312156109ce576109cd610858565b5b60006109dc848285016109a3565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a2c601b836109e5565b9150610a37826109f6565b602082019050919050565b60006020820190508181036000830152610a5b81610a1f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9c82610824565b9150610aa783610824565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610adc57610adb610a62565b5b828201905092915050565b600081519050610af68161098c565b92915050565b600060208284031215610b1257610b11610858565b5b6000610b2084828501610ae7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6382610824565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9657610b95610a62565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610beb600083610bd0565b9150610bf682610bdb565b600082019050919050565b6000610c0c82610bde565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c4c600b836109e5565b9150610c5782610c16565b602082019050919050565b60006020820190508181036000830152610c7b81610c3f565b9050919050565b600069ffffffffffffffffffff82169050919050565b610ca181610c82565b8114610cac57600080fd5b50565b600081519050610cbe81610c98565b92915050565b6000819050919050565b610cd781610cc4565b8114610ce257600080fd5b50565b600081519050610cf481610cce565b92915050565b600080600080600060a08688031215610d1657610d15610858565b5b6000610d2488828901610caf565b9550506020610d3588828901610ce5565b9450506040610d4688828901610ae7565b9350506060610d5788828901610ae7565b9250506080610d6888828901610caf565b9150509295509295909350565b6000610d8082610cc4565b9150610d8b83610cc4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dca57610dc9610a62565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0757610e06610a62565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4457610e43610a62565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8157610e80610a62565b5b828202905092915050565b6000610e9782610824565b9150610ea283610824565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610edb57610eda610a62565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2082610824565b9150610f2b83610824565b925082610f3b57610f3a610ee6565b5b82820490509291505056fea2646970667358221220cb7babd42dd06c332306b4db639bac89da492b9766312adce4f255529788f94c64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061083d565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108bb565b610602565b60405161010e919061083d565b60405180910390f35b34801561012357600080fd5b5061012c61061a565b604051610139919061083d565b60405180910390f35b34801561014e57600080fd5b50610157610627565b6040516101649190610947565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064d565b6040516101999190610971565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109b8565b610673565b6040516101d69190610971565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b290919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a42565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a91565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190610afc565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610447576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104f25760006001828154811061046d5761046c610b29565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ea90610b58565b91505061044a565b50600067ffffffffffffffff81111561050e5761050d610ba1565b5b60405190808252806020026020018201604052801561053c5781602001602082028036833780820191505090505b506001908051906020019061055292919061077d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057990610c01565b60006040518083038185875af1925050503d80600081146105b6576040519150601f19603f3d011682016040523d82523d6000602084013e6105bb565b606091505b50509050806105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f690610c62565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061068357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190610cfa565b50505091505060006402540be4008261074c9190610d75565b90506000670de0b6b3a764000086836107659190610e8c565b61076f9190610f15565b905080935050505092915050565b8280548282559060005260206000209081019282156107f6579160200282015b828111156107f55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079d565b5b5090506108039190610807565b5090565b5b80821115610820576000816000905550600101610808565b5090565b6000819050919050565b61083781610824565b82525050565b6000602082019050610852600083018461082e565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108888261085d565b9050919050565b6108988161087d565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b6000602082840312156108d1576108d0610858565b5b60006108df848285016108a6565b91505092915050565b6000819050919050565b600061090d6109086109038461085d565b6108e8565b61085d565b9050919050565b600061091f826108f2565b9050919050565b600061093182610914565b9050919050565b61094181610926565b82525050565b600060208201905061095c6000830184610938565b92915050565b61096b8161087d565b82525050565b60006020820190506109866000830184610962565b92915050565b61099581610824565b81146109a057600080fd5b50565b6000813590506109b28161098c565b92915050565b6000602082840312156109ce576109cd610858565b5b60006109dc848285016109a3565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a2c601b836109e5565b9150610a37826109f6565b602082019050919050565b60006020820190508181036000830152610a5b81610a1f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9c82610824565b9150610aa783610824565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610adc57610adb610a62565b5b828201905092915050565b600081519050610af68161098c565b92915050565b600060208284031215610b1257610b11610858565b5b6000610b2084828501610ae7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6382610824565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9657610b95610a62565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610beb600083610bd0565b9150610bf682610bdb565b600082019050919050565b6000610c0c82610bde565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c4c600b836109e5565b9150610c5782610c16565b602082019050919050565b60006020820190508181036000830152610c7b81610c3f565b9050919050565b600069ffffffffffffffffffff82169050919050565b610ca181610c82565b8114610cac57600080fd5b50565b600081519050610cbe81610c98565b92915050565b6000819050919050565b610cd781610cc4565b8114610ce257600080fd5b50565b600081519050610cf481610cce565b92915050565b600080600080600060a08688031215610d1657610d15610858565b5b6000610d2488828901610caf565b9550506020610d3588828901610ce5565b9450506040610d4688828901610ae7565b9350506060610d5788828901610ae7565b9250506080610d6888828901610caf565b9150509295509295909350565b6000610d8082610cc4565b9150610d8b83610cc4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dca57610dc9610a62565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0757610e06610a62565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4457610e43610a62565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8157610e80610a62565b5b828202905092915050565b6000610e9782610824565b9150610ea283610824565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610edb57610eda610a62565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2082610824565b9150610f2b83610824565b925082610f3b57610f3a610ee6565b5b82820490509291505056fea2646970667358221220cb7babd42dd06c332306b4db639bac89da492b9766312adce4f255529788f94c64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 76,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}